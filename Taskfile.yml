# https://taskfile.dev

version: "3"

vars:
  TOOLS_DIR: '{{ list .ROOT_DIR "tools" | join "/" | osClean }}'
  SAMPLES_DIR: '{{ list .ROOT_DIR "samples" | join "/" | osClean }}'
  GOLANGCI_CUSTOM: '{{ list .TOOLS_DIR "custom-gcl" | join "/" | osClean }}'

run: once

tasks:
  default:
    desc: Run all tasks
    deps:
      - ci
      - docs

  build:
    desc: Build the crddoc binary
    cmds:
      - go build

  test:
    desc: Run tests and checks
    deps:
      - unit-test
      - lint

  unit-test:
    desc: Run unit tests
    deps:
      - build
    cmds:
      - go test ./... -json | go-testreport {{.REPORT}}
    vars:
      REPORT: '{{.GITHUB_STEP_SUMMARY | default "test-report.md" }}'

  lint:
    desc: Run golangci-lint to check for linting issues
    cmds:
      - golangci-lint run

  ci:
    desc: Run continuous integration tasks
    deps:
      - test

  docs:
    summary: Build documentation
    deps:
      - docs.config
      - docs.aso
      - docs.capz

  docs.config:
    summary: Build documentation of config options
    deps:
      - build
    cmds:
      - ./crddoc document-package {{.PACKAGE}} --output {{.OUTPUT}} --config {{.CONFIG}}
    vars:
      DST_DIR: '{{joinPath .ROOT_DIR "docs" "config"}}'
      PACKAGE: '{{joinPath .ROOT_DIR "internal" "config" | shellQuote}}'
      OUTPUT: '{{joinPath .DST_DIR "config.md" | shellQuote}}'
      CONFIG: '{{joinPath .DST_DIR "crddoc-config.yaml" | shellQuote}}'

  docs.aso:
    summary: Build example showing documentation for Azure Service Operator
    deps:
      - build
    status:
      # Skip if the package isn't available
      - test ! -d {{.PACKAGE}}
    cmds:
      - ./crddoc document-package {{.PACKAGE}} --output {{.OUTPUT}} --config {{.CONFIG}}
    vars:
      DST_DIR: '{{joinPath .SAMPLES_DIR "azure-service-operator"}}'
      PACKAGE: '{{joinPath .ROOT_DIR "../azure-service-operator/v2/api/containerservice/v1api20210501" | shellQuote}}'
      OUTPUT: '{{joinPath .DST_DIR "containerservice.md" | shellQuote}}'
      CONFIG: '{{joinPath .DST_DIR "aso.yaml" | shellQuote}}'

  docs.capz:
    summary: Build example showing documentation for Cluster API Provider Azure
    deps:
      - build
    status:
      # Skip if the package isn't available
      - test ! -d {{.PACKAGE}}
    cmds:
      - ./crddoc document-package {{.PACKAGE}} --output {{.OUTPUT}} --config {{.CONFIG}}
    vars:
      CRD: "containerservice"
      DST_DIR: '{{joinPath .SAMPLES_DIR "cluster-api-provider-azure"}}'
      PACKAGE: '{{joinPath .ROOT_DIR "../cluster-api-provider-azure/api/v1beta1" | shellQuote}}'
      OUTPUT: '{{joinPath .DST_DIR "capz.md" | shellQuote}}'
      CONFIG: '{{joinPath .DST_DIR "capz.yaml" | shellQuote}}'

  tidy:
    desc: "Tidy up source"

  tidy.gofumpt:
    desc: "Run gofumpt"
    cmds:
      - gofumpt -l -w .

  tidy.mod:
    desc: "Run go mod tidy"
    cmds:
      - go mod tidy

  gremlins:
    desc: "Use gremlins to check the quality of our tests"
    cmds:
      - gremlins unleash ./internal

  # We use a custom golangci-lint with the nilaway module included,
  # this target builds this if needed
  golangci-lint-custom:
    cmds:
      - cmd: echo "Building custom golangci-lint"
        silent: true
      - pwd
      - echo {{.TOOLS_DIR}}
      - echo {{.SAMPLES_DIR}}
      - echo {{.GOLANGCI_CUSTOM}}
      - golangci-lint custom
    dir: "{{.TOOLS_DIR}}"
    # Skip if we've already built the custom golangci-lint
    status:
      # Don't need to rebuild the custom tool if it exists
      - test -f {{.TOOLS_DIR}}/custom-gcl
    sources:
      - .custom-gcl.yml
      - ../.golangci.yml
